*****GIT DAY 1***** (GIT PULL BEFORE GIT PUSH)
1. Create a project
2.Create a GITHUB REPOSITORY
    *go to github
    *Repositories>Create new Repository> first_git_project
3. Create a new Commit for the first time.
    *git init
    *git add . [adds everything]
    *git commit -m "first commit"
    *git branch -M main
    *git remote add origin https://github.com/Enxes/first_git_project.git
    *git push -u origin main
    *****Then your code should be pushed to github. REFRESH YOUR PAGE TO SEE THE CODE

NOTE: git status -> This is our friend. This can be used anytime to see the progress

4. Create a new SECOND COMMIT (used everytime?)
    *Create a new Java class under first_git_package: MySecondClass
    *Create a new commit and push the code to github (2nd and rest of the commits other than 1st)
        *git add .
        *git commit -m "added my second java class"
        *git push

5. ADDING SPECIFIC FILES
    *Create 2 JAVA classes: MyThirdClass, MyFourthClass
    *Create a commit with ONLY MyFourthClass
        * git status (to check which files are new and unadded)
            *red means unadded and new
            *green means added
        * git add "src/main/java/first_git_package/MyFourthClass.java"
        * git commit -m "commmiting my fourth class"
        * git push

6. GIT PULL
    *git pull is used to get the code from github
    *git pull = git fetch + git merge
        NOTE: if git pull throws error then use:
        git fetch
        git merge
    *NOW THAT WE HAVE OUR LOCAL UPDATED, THEN COMMIT THE CODES AND PUSH ALL TOGETHER
        *git add .
        *git commit -m "commiting my codes"
        *git push

NOTE: PULL BEFORE PUSH ***************
        *git pull -> git add . -> git commit -m "message" -> git push



********************DAY 2********************************
BRANCHING
git branch -a -> show me all branch
git branch enes -> create enes branch
git checkout enes -> switched to enes branch from main
created a code : MySixthClass
create a new commit and push
    git add .
    git commit -m "message"
    git push --set-upstream origin enes
Then codes will be in the remote enes branch

***One more side branch flow
created a code : first_git_package.MySeventhClass
create a new commit and push
    git add .
    git commit -m "message"
    git push
    Then new codes will be in remote enes branch
    Then in github expert or us will do:
        Pull Request (PR)(US or Expert)
        Then code Review(Expert)
        Then code Merge(Expert)

